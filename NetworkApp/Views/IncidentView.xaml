<UserControl x:Class="NetworkApp.Views.IncidentView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NetworkApp.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:cal="http://www.caliburnproject.org"
             
             cal:Message.Attach="[Gesture F3] = [FindNextGestureKey]"
             mc:Ignorable="d" Background="White"
             d:DesignHeight="650" d:DesignWidth="1020">



    <UserControl.Resources>
        <Style x:Key="wrapp" TargetType="TextBlock">
            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
        </Style>
       

    </UserControl.Resources>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition  Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>


        <ProgressBar Grid.RowSpan="2"  Width="200" Height="200" Visibility="{Binding Path=Prog,Converter={StaticResource booleanToVisibiltyConverter}}"  VerticalAlignment="Center" Style="{StaticResource MaterialDesignCircularProgressBar}" Value="0" IsIndeterminate="True" />

        <DockPanel Background="#222f3e" Visibility="{Binding Path=Load,Converter={StaticResource booleanToVisibiltyConverter}}" Grid.Row="0">

            <StackPanel Orientation="Horizontal">
                <materialDesign:PackIcon Width="40" Height="40" Margin="10 3" VerticalAlignment="Center" Grid.Row="2" Grid.Column="1" Kind="PersonSearch" Foreground="{Binding ElementName=search, Path=Foreground}" />
                <TextBox  Style="{StaticResource MaterialDesignFilledTextFieldTextBox}" materialDesign:TextFieldAssist.UnderlineBrush="White"    Foreground="White" DockPanel.Dock="Left"  Margin="10 3"  x:Name="search" Width="300" materialDesign:HintAssist.Foreground="White"  materialDesign:HintAssist.Hint="Chercher un Malade......"/>
            </StackPanel>


            <Button x:Name="AddMalade" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="0 0 10 0" Background="Transparent" BorderBrush="Transparent"  Style="{StaticResource MaterialDesignFloatingActionButton}">
                <materialDesign:PackIcon Kind="AddCircle" Height="auto" Width="auto" />
            </Button>
        </DockPanel>
        
        
        <DataGrid Grid.Row="1" HorizontalAlignment="Stretch"  Visibility="{Binding Path=Load,Converter={StaticResource booleanToVisibiltyConverter}}"  x:Name="dataincident" CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="True" AutoGenerateColumns="False">
            <DataGrid.Columns>
                <materialDesign:MaterialDataGridTextColumn Width="*" ElementStyle="{StaticResource wrapp }" Header="Date d'incident" Binding="{Binding Path=IncidentDate ,StringFormat=d}"/>
                <materialDesign:MaterialDataGridTextColumn Width="*" ElementStyle="{StaticResource wrapp }" Header="Direction" Binding="{Binding Path=Direction}"/>
                <materialDesign:MaterialDataGridTextColumn Width="*" ElementStyle="{StaticResource wrapp }" Header="Site" Binding="{Binding Path=Site}"/>
                <materialDesign:MaterialDataGridTextColumn Width="*" ElementStyle="{StaticResource wrapp }" Header="Nature" Binding="{Binding Path=Nature}"/>
                <materialDesign:MaterialDataGridTextColumn Width="*" ElementStyle="{StaticResource wrapp }" Header="Operateur" Binding="{Binding Path=Operateur}"/>
                <!--<DataGridCheckBoxColumn Header="Cloture d'incident" Binding="{Binding Path=isClotured}"/>-->
                <materialDesign:MaterialDataGridTextColumn ElementStyle="{StaticResource wrapp }" Width="2.5*" Header="Solution" Binding="{Binding Path=Solution}"/>
                <materialDesign:MaterialDataGridTextColumn ElementStyle="{StaticResource wrapp }" Width="*" Header="Cloturer le:" Binding="{Binding Path=ClotureDate,StringFormat=d}"/>
                <materialDesign:MaterialDataGridTextColumn ElementStyle="{StaticResource wrapp }" Width="*" Header="Ajouter par:" Binding="{Binding Path=AddBy}"/>
               
                <!--edit button-->
                <DataGridTemplateColumn Width="auto" Header="EDIT">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button cal:Message.Attach="Edit(dataincident.SelectedItem)" Background="{x:Null}" BorderBrush="{x:Null}" Width="auto" Height="auto">
                                <materialDesign:PackIcon Kind="SquareEditOutline" Foreground="Green" Width="auto" Height="auto"  />
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--end of edit button-->

                <!--delete button-->
                <DataGridTemplateColumn Width="auto" Header="DELETE">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button cal:Message.Attach="Delete(dataincident.SelectedItem)"  Background="{x:Null}" BorderBrush="{x:Null}" Width="auto" Height="auto"  >
                                <materialDesign:PackIcon Kind="DeleteForeverOutline" Foreground="red" Width="auto" Height="auto"  />
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--end of delete button-->

            </DataGrid.Columns>
        </DataGrid>

    </Grid>
</UserControl>
